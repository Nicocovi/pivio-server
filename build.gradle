buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.springframework:springloaded:1.2.8.RELEASE'
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.15.0'
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'jacoco'
    id 'java'
    id 'idea'
    id 'org.sonarqube' version '2.5'
    id 'org.springframework.boot' version '1.5.8.RELEASE'
}

clean {
    delete 'data'
}

license {
    ignoreFailures true
    header = file('LICENSE')
}

jar {
    baseName = 'pivio-server'
    version = '1.1.0'
}

repositories {
    jcenter()
}

dependencies {
    compile 'com.flipkart.zjsonpatch:zjsonpatch:0.3.6'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'org.elasticsearch.plugin:delete-by-query:2.4.6'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    compile 'org.springframework.boot:spring-boot-starter-web'

    testCompile 'com.jayway.jsonpath:json-path'
    testCompile 'org.apache.commons:commons-text:1.1'
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'org.awaitility:awaitility:3.0.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.testcontainers:testcontainers:1.4.2'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}
